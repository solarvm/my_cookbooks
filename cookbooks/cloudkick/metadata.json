{
  "dependencies": {
    "apt": ">= 0.0.0",
    "yum": ">= 0.0.0"
  },
  "name": "cloudkick",
  "maintainer_email": "cookbooks@opscode.com",
  "attributes": {
  },
  "license": "Apache 2.0",
  "suggestions": {
  },
  "platforms": {
  },
  "maintainer": "Opscode, Inc.",
  "long_description": "Description\n===========\n\nInstalls and configures the Cloudkick Agent, and integrates it with Chef.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Debian, Ubuntu\n* CentOS, Red Hat, Fedora\n\nCookbooks\n---------\n\n* apt (leverages apt_repository LWRP)\n* yum (leverages yum_repository LWRP)\n\nThe `apt_repository` and `yum_repository` LWRPs are used from these cookbooks to create the proper repository entries so the cloudkick agent can be downloaded and installed.\n\nUsage\n=====\n\nIn order for the agent to function, you'll need to have defined your Cloudkick API key and secret.  We recommend you do this in a Role, which should also take care of applying the cloudkick::default recipe.\n\nAssuming you name the role 'cloudkick', here is the required json:\n\n  {\n    \"name\": \"cloudkick\",\n    \"chef_type\": \"role\",\n    \"json_class\": \"Chef::Role\",\n    \"default_attributes\": {\n\n    },\n    \"description\": \"Configures Cloudkick\",\n    \"run_list\": [\n      \"recipe[cloudkick]\"\n    ],\n    \"override_attributes\": {\n      \"cloudkick\": {\n        \"oauth_key\": \"YOUR KEY HERE\"\n        \"oauth_secret\": \"YOUR SECRET HERE\"\n      }\n    }\n  }\n\nIf you want Cloudkick installed everywhere, we recommend you just add the cloudkick attributes to a base role.\n\nAll of the data about the node from Cloudkick is available in node[:cloudkick] - for example: \n\n  \"cloudkick\": {\n    \"oauth_key\": \"YOUR KEY HERE\",\n    \"oauth_secret\": \"YOUR SECRET HERE\",\n    \"data\": {\n      \"name\": \"slice204393\",\n      \"status\": \"running\",\n      \"ipaddress\": \"173.203.83.199\",\n      \"provider_id\": \"padc2665\",\n      \"tags\": [\n        \"agent\",\n        \"cloudkick\"\n      ],\n      \"agent_state\": \"connected\",\n      \"id\": \"n87cfc79c5\",\n      \"provider_name\": \"Rackspace\",\n      \"color\": \"#fffffff\"\n    }\n  }\n\nOf particular interest is the inclusion of the Cloudkick tags.  This will allow you to search Chef via tags placed on nodes within Cloudkick:\n\n  $ knife search node 'cloudkick_data_tags:agent' -a fqdn\n  {\n    \"rows\": [\n      {\n        \"fqdn\": \"slice204393\",\n        \"id\": \"slice204393\"\n      }\n    ],\n    \"start\": 0,\n    \"total\": 1\n  }\n  \nWe automatically add a tag for each Role applied to your node.  For example, if your node had a run list of:\n\n  \"run_list\": [ \"role[webserver]\", \"role[database_master]\" ]\n\nThe node will automatically have the 'webserver' and 'database_master' tags within Cloudkick.\n\nLicense and Author\n==================\n\nAuthor:: Adam Jacob (<adam@opscode.com>)\nAuthor:: Seth Chisamore (<schisamo@opscode.com>)\nCopyright:: 2010-2011, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "version": "1.0.1",
  "recommendations": {
  },
  "recipes": {
    "cloudkick::default": "Installs and configures Cloudkick"
  },
  "groupings": {
  },
  "conflicting": {
  },
  "replacing": {
  },
  "description": "Installs/Configures the Cloudkick Agent",
  "providing": {
  }
}